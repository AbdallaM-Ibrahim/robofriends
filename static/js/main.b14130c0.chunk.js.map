{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","robot","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this$state","filteredRobots","filter","toLowerCase","includes","length","src_components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","_this2","fetch","then","response","json","users","React","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.b14130c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className=\"main tc bg-light-green br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <div>\r\n                <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\" />\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div className='main2'>\r\n            {\r\n                robots.map((robot) => {\r\n                    return (\r\n                        <Card\r\n                            key={robot.id}\r\n                            id={robot.id}\r\n                            name={robot.name}\r\n                            email={robot.email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className=\"box\">\r\n        <input\r\n            className=\"ba b--green bg-lightest-blue\"\r\n            type=\"search\"\r\n            placeholder=\"Search Robots\"\r\n            onChange={searchChange}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '3px solid black', height: '80vh'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Something went wrong</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import './App.css';\nimport React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n  \n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length? \n      <h1>Loading</h1>:\n      (\n        <div>\n          <header className='App-header'>\n            <h1>RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n          </header>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}));\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <div>\n    <App />\n  </div>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}